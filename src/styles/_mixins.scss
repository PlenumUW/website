/*
Mixins
*/

// Returns a z-index value of the requested name found in the z-index list
@function z($name) {
  @if index($z-indexes, $name) {
    @return (length($z-indexes) - index($z-indexes, $name)) + 1;
  } @else {
    @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
    @return null;
  }
}

@mixin header {
  position: fixed;
  top: 0;
  width: 100vw;
}

@mixin full-viewport($top: 0, $bottom: 0, $left: 0, $right: 0) {
  position: fixed;
  top: $top;
  bottom: $bottom;
  left: $left;
  right: $right;
}

@mixin fit-parent {
  position: relative;
  width: 100%;
  height: 100%;
}

@mixin center-child($dir: row) {
  @if $dir == column or $dir == row {
    display: flex;
    flex-direction: $dir;
    align-items: center;
  } @else {
    @error 'Given direction must either be "row" or "column"';
  }
}

/*
    Animation
*/
@mixin transition($time, $type, $property) {
  transition: $time $type $property;
  -moz-transition: $time $type $property;
  -webkit-transition: $time $type $property;
}

/* Responsive media queries */
@mixin for-size($size) {
  @if $size == phone-only {
    @media (max-width: $g-viewport-phone - 1px) { @content; }
  } @else if $size == tablet-portrait-up {
    @media (min-width: $g-viewport-phone) { @content; }
  } @else if $size == tablet-landscape-down {
      @media (max-width: $g-viewport-tablet - 1px) { @content; }
  } @else if $size == tablet-landscape-up {
    @media (min-width: $g-viewport-tablet) { @content; }
  } @else if $size == desktop-up {
    @media (min-width: $g-viewport-desktop) { @content; }
  } @else if $size == big-desktop-up {
    @media (min-width: $g-viewport-desktop--big) { @content; }
  }
}

  /* Material Elevation Shadows */
@mixin box-shadow ($dp) {
  @if $dp==0 {
      box-shadow: none
  }
  @else if $dp==1 {
      box-shadow: 0 1px 1px 0 rgba(0, 0, 0, .14), 0 2px 1px -1px rgba(0, 0, 0, .12), 0 1px 3px 0 rgba(0, 0, 0, .20)
  }
  @else if $dp==2 {
      box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 1px -2px rgba(0, 0, 0, .12), 0 1px 5px 0 rgba(0, 0, 0, .20)
  }
  @else if $dp==3 {
      box-shadow: 0 3px 4px 0 rgba(0, 0, 0, .14), 0 3px 3px -2px rgba(0, 0, 0, .12), 0 1px 8px 0 rgba(0, 0, 0, .20)
  }
  @else if $dp==4 {
      box-shadow: 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12), 0 2px 4px -1px rgba(0, 0, 0, .20)
  }
  @else if $dp==6 {
      box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .20)
  }
  @else if $dp==8 {
      box-shadow: 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12), 0 5px 5px -3px rgba(0, 0, 0, .20)
  }
  @else if $dp==9 {
      box-shadow: 0 9px 12px 1px rgba(0, 0, 0, .14), 0 3px 16px 2px rgba(0, 0, 0, .12), 0 5px 6px -3px rgba(0, 0, 0, .20)
  }
  @else if $dp==12 {
      box-shadow: 0 12px 17px 2px rgba(0, 0, 0, .14), 0 5px 22px 4px rgba(0, 0, 0, .12), 0 7px 8px -4px rgba(0, 0, 0, .20)
  }
  @else if $dp==16 {
      box-shadow: 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12), 0 8px 10px -5px rgba(0, 0, 0, .20)
  }
  @else if $dp==24 {
      box-shadow: 0 24px 38px 3px rgba(0, 0, 0, .14), 0 9px 46px 8px rgba(0, 0, 0, .12), 0 11px 15px -7px rgba(0, 0, 0, .20)
  } @else {
      @error "Invalid argument for $dp: {" + $dp + "}, look at the method definition for possible values";
  }
}