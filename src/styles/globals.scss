// Global variables to be given access in every component

// Typesettings utilities
@import "../../node_modules/typesettings/typesettings/settings";
@import "../../node_modules/typesettings/typesettings/internal";
@import "../../node_modules/typesettings/typesettings/functions";
@import "../../node_modules/typesettings/typesettings/mixins";

// Responsive Font System
@import "~rfs/scss";

/*
Settings for Typesettings
*/
$font-sans: sans-serif;
$font-serif: 'Spectral', serif;
$font-titling: 'Bluu Titling', serif;
$font-titling--subtitle: 'Bluu', serif;
$font-mono: monospace;
$text-color: black;
$base-vertical-unit: 6px;
$base-line-multi: 5;
$base-font-size: 14px;
$ms-ratio: 1.414; // 1.414
$paragraph-indent: true; // false
$paragraph-justify: false; // false
$load-typesetted: true; // True is the default value

// Standard mixins
@import "_mixins";
// !!! Project mixins at bottom of file !!!

/*
    Layout
*/
$g-lefter-width: 124px;
$g-header-height: 62px; // 62px
$g-header-height--desktop: 100px;
@mixin header-height($media: hand-held, $property: height) {
    $gradient-ratio: 0.8;

    @if $media == hand-held {
        #{$property}: calc(#{$g-header-height / #{$gradient-ratio}});
    } @else if $media == desktop {
        #{$property}: calc(#{$g-header-height--desktop / #{$gradient-ratio}});
    }
}

    /*
        Responsive Layout
    */
    $g-viewport-phone: 600px;
    $g-viewport-tablet: 900px;
    $g-viewport-desktop: 1200px;
    $g-viewport-desktop--big: 1800px;

/*
    Transitions
*/
$g-transition-router-duration: 500; // in ms

/*
    Color
*/


    /*
        High Contrast
    */


    /*
        Color Schemes
        TODO: implement for 'prefer-color-schemes' media query of OS preference
                prolly just invert the colors...
    */


/*
    Focus
*/
$g-focus-outline: 3px solid black;

/* 
    Project Specific Mixins
*/


/*
    Cursor
*/

/*
    Mixins
*/
    /* Responsive media queries */
@mixin for-size($size) {
    @if $size == phone-only {
      @media (max-width: $g-viewport-phone - 1px) { @content; }
    } @else if $size == tablet-portrait-up {
      @media (min-width: $g-viewport-phone) { @content; }
    } @else if $size == tablet-landscape-down {
        @media (max-width: $g-viewport-tablet - 1px) { @content; }
    } @else if $size == tablet-landscape-up {
      @media (min-width: $g-viewport-tablet) { @content; }
    } @else if $size == desktop-up {
      @media (min-width: $g-viewport-desktop) { @content; }
    } @else if $size == big-desktop-up {
      @media (min-width: $g-viewport-desktop--big) { @content; }
    }
  }

    /* Material Elevation Shadows */
  @mixin box-shadow ($dp) {
    @if $dp==0 {
        box-shadow: none
    }
    @else if $dp==1 {
        box-shadow: 0 1px 1px 0 rgba(0, 0, 0, .14), 0 2px 1px -1px rgba(0, 0, 0, .12), 0 1px 3px 0 rgba(0, 0, 0, .20)
    }
    @else if $dp==2 {
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 1px -2px rgba(0, 0, 0, .12), 0 1px 5px 0 rgba(0, 0, 0, .20)
    }
    @else if $dp==3 {
        box-shadow: 0 3px 4px 0 rgba(0, 0, 0, .14), 0 3px 3px -2px rgba(0, 0, 0, .12), 0 1px 8px 0 rgba(0, 0, 0, .20)
    }
    @else if $dp==4 {
        box-shadow: 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12), 0 2px 4px -1px rgba(0, 0, 0, .20)
    }
    @else if $dp==6 {
        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12), 0 3px 5px -1px rgba(0, 0, 0, .20)
    }
    @else if $dp==8 {
        box-shadow: 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12), 0 5px 5px -3px rgba(0, 0, 0, .20)
    }
    @else if $dp==9 {
        box-shadow: 0 9px 12px 1px rgba(0, 0, 0, .14), 0 3px 16px 2px rgba(0, 0, 0, .12), 0 5px 6px -3px rgba(0, 0, 0, .20)
    }
    @else if $dp==12 {
        box-shadow: 0 12px 17px 2px rgba(0, 0, 0, .14), 0 5px 22px 4px rgba(0, 0, 0, .12), 0 7px 8px -4px rgba(0, 0, 0, .20)
    }
    @else if $dp==16 {
        box-shadow: 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12), 0 8px 10px -5px rgba(0, 0, 0, .20)
    }
    @else if $dp==24 {
        box-shadow: 0 24px 38px 3px rgba(0, 0, 0, .14), 0 9px 46px 8px rgba(0, 0, 0, .12), 0 11px 15px -7px rgba(0, 0, 0, .20)
    } @else {
        @error "Invalid argument for $dp: {" + $dp + "}, look at the method definition for possible values";
    }
}

@mixin focus($offset: 10px) {
    outline: $g-focus-outline;
    outline-offset: $offset;

    text-decoration: none;
}